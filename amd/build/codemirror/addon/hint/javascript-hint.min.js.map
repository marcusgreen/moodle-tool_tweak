{"version":3,"file":"javascript-hint.min.js","sources":["../../../../src/codemirror/addon/hint/javascript-hint.js"],"sourcesContent":["/*eslint-disable*/\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n    if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n      mod(require(\"../../lib/codemirror\"));\n    else if (typeof define == \"function\" && define.amd) // AMD\n      define([\"../../lib/codemirror\"], mod);\n    else // Plain browser env\n      mod(CodeMirror);\n  })(function(CodeMirror) {\n    var Pos = CodeMirror.Pos;\n\n    function forEach(arr, f) {\n      for (var i = 0, e = arr.length; i < e; ++i) f(arr[i]);\n    }\n\n    function arrayContains(arr, item) {\n      if (!Array.prototype.indexOf) {\n        var i = arr.length;\n        while (i--) {\n          if (arr[i] === item) {\n            return true;\n          }\n        }\n        return false;\n      }\n      return arr.indexOf(item) != -1;\n    }\n\n    function scriptHint(editor, keywords, getToken, options) {\n      // Find the token at the cursor\n      var cur = editor.getCursor(), token = getToken(editor, cur);\n      if (/\\b(?:string|comment)\\b/.test(token.type)) return;\n      var innerMode = CodeMirror.innerMode(editor.getMode(), token.state);\n      if (innerMode.mode.helperType === \"json\") return;\n      token.state = innerMode.state;\n\n      // If it's not a 'word-style' token, ignore the token.\n      if (!/^[\\w$_]*$/.test(token.string)) {\n        token = {start: cur.ch, end: cur.ch, string: \"\", state: token.state,\n                 type: token.string == \".\" ? \"property\" : null};\n      } else if (token.end > cur.ch) {\n        token.end = cur.ch;\n        token.string = token.string.slice(0, cur.ch - token.start);\n      }\n\n      var tprop = token;\n      // If it is a property, find out what it is a property of.\n      while (tprop.type == \"property\") {\n        tprop = getToken(editor, Pos(cur.line, tprop.start));\n        if (tprop.string != \".\") return;\n        tprop = getToken(editor, Pos(cur.line, tprop.start));\n        if (!context) var context = [];\n        context.push(tprop);\n      }\n      return {list: getCompletions(token, context, keywords, options),\n              from: Pos(cur.line, token.start),\n              to: Pos(cur.line, token.end)};\n    }\n\n    function javascriptHint(editor, options) {\n      return scriptHint(editor, javascriptKeywords,\n                        function (e, cur) {return e.getTokenAt(cur);},\n                        options);\n    };\n    CodeMirror.registerHelper(\"hint\", \"javascript\", javascriptHint);\n\n    function getCoffeeScriptToken(editor, cur) {\n    // This getToken, it is for coffeescript, imitates the behavior of\n    // getTokenAt method in javascript.js, that is, returning \"property\"\n    // type and treat \".\" as independent token.\n      var token = editor.getTokenAt(cur);\n      if (cur.ch == token.start + 1 && token.string.charAt(0) == '.') {\n        token.end = token.start;\n        token.string = '.';\n        token.type = \"property\";\n      }\n      else if (/^\\.[\\w$_]*$/.test(token.string)) {\n        token.type = \"property\";\n        token.start++;\n        token.string = token.string.replace(/\\./, '');\n      }\n      return token;\n    }\n\n    function coffeescriptHint(editor, options) {\n      return scriptHint(editor, coffeescriptKeywords, getCoffeeScriptToken, options);\n    }\n    CodeMirror.registerHelper(\"hint\", \"coffeescript\", coffeescriptHint);\n\n    var stringProps = (\"charAt charCodeAt indexOf lastIndexOf substring substr slice trim trimLeft trimRight \" +\n                       \"toUpperCase toLowerCase split concat match replace search\").split(\" \");\n    var arrayProps = (\"length concat join splice push pop shift unshift slice reverse sort indexOf \" +\n                      \"lastIndexOf every some filter forEach map reduce reduceRight \").split(\" \");\n    var funcProps = \"prototype apply call bind\".split(\" \");\n    var javascriptKeywords = (\"break case catch class const continue debugger default delete do else export extends false finally for function \" +\n                    \"if in import instanceof new null return super switch this throw true try typeof var void while with yield\").split(\" \");\n    var coffeescriptKeywords = (\"and break catch class continue delete do else extends false finally for \" +\n                    \"if in instanceof isnt new no not null of off on or return switch then throw true try typeof until void while with yes\").split(\" \");\n\n    function forAllProps(obj, callback) {\n      if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n        for (var name in obj) callback(name)\n      } else {\n        for (var o = obj; o; o = Object.getPrototypeOf(o))\n          Object.getOwnPropertyNames(o).forEach(callback)\n      }\n    }\n\n    function getCompletions(token, context, keywords, options) {\n      var found = [], start = token.string, global = options && options.globalScope || window;\n      function maybeAdd(str) {\n        if (str.lastIndexOf(start, 0) == 0 && !arrayContains(found, str)) found.push(str);\n      }\n      function gatherCompletions(obj) {\n        if (typeof obj == \"string\") forEach(stringProps, maybeAdd);\n        else if (obj instanceof Array) forEach(arrayProps, maybeAdd);\n        else if (obj instanceof Function) forEach(funcProps, maybeAdd);\n        forAllProps(obj, maybeAdd)\n      }\n\n      if (context && context.length) {\n        // If this is a property, see if it belongs to some object we can\n        // find in the current environment.\n        var obj = context.pop(), base;\n        if (obj.type && obj.type.indexOf(\"variable\") === 0) {\n          if (options && options.additionalContext)\n            base = options.additionalContext[obj.string];\n          if (!options || options.useGlobalScope !== false)\n            base = base || global[obj.string];\n        } else if (obj.type == \"string\") {\n          base = \"\";\n        } else if (obj.type == \"atom\") {\n          base = 1;\n        } else if (obj.type == \"function\") {\n          if (global.jQuery != null && (obj.string == '$' || obj.string == 'jQuery') &&\n              (typeof global.jQuery == 'function'))\n            base = global.jQuery();\n          else if (global._ != null && (obj.string == '_') && (typeof global._ == 'function'))\n            base = global._();\n        }\n        while (base != null && context.length)\n          base = base[context.pop().string];\n        if (base != null) gatherCompletions(base);\n      } else {\n        // If not, just look in the global object, any local scope, and optional additional-context\n        // (reading into JS mode internals to get at the local and global variables)\n        for (var v = token.state.localVars; v; v = v.next) maybeAdd(v.name);\n        for (var c = token.state.context; c; c = c.prev)\n          for (var v = c.vars; v; v = v.next) maybeAdd(v.name)\n        for (var v = token.state.globalVars; v; v = v.next) maybeAdd(v.name);\n        if (options && options.additionalContext != null)\n          for (var key in options.additionalContext)\n            maybeAdd(key);\n        if (!options || options.useGlobalScope !== false)\n          gatherCompletions(global);\n        forEach(keywords, maybeAdd);\n      }\n      return found;\n    }\n  });"],"names":["mod","CodeMirror","Pos","forEach","arr","f","i","e","length","scriptHint","editor","keywords","getToken","options","cur","getCursor","token","test","type","innerMode","getMode","state","mode","helperType","string","end","ch","slice","start","tprop","line","context","push","list","getCompletions","from","to","getCoffeeScriptToken","getTokenAt","charAt","replace","registerHelper","javascriptKeywords","coffeescriptKeywords","stringProps","split","arrayProps","funcProps","found","global","globalScope","window","maybeAdd","str","lastIndexOf","item","Array","prototype","indexOf","arrayContains","gatherCompletions","obj","Function","callback","Object","getOwnPropertyNames","getPrototypeOf","o","name","forAllProps","base","pop","additionalContext","useGlobalScope","jQuery","_","v","localVars","next","c","prev","vars","globalVars","key","exports","module","require","define","amd"],"mappings":"AAIA,IAAUA,IAAAA,IAOL,SAASC,gBACNC,IAAMD,WAAWC,aAEZC,QAAQC,IAAKC,OACf,IAAIC,EAAI,EAAGC,EAAIH,IAAII,OAAQF,EAAIC,IAAKD,EAAGD,EAAED,IAAIE,aAgB3CG,WAAWC,OAAQC,SAAUC,SAAUC,aAE1CC,IAAMJ,OAAOK,YAAaC,MAAQJ,SAASF,OAAQI,SACnD,yBAAyBG,KAAKD,MAAME,WACpCC,UAAYlB,WAAWkB,UAAUT,OAAOU,UAAWJ,MAAMK,UAC3B,SAA9BF,UAAUG,KAAKC,YACnBP,MAAMK,MAAQF,UAAUE,MAGnB,YAAYJ,KAAKD,MAAMQ,QAGjBR,MAAMS,IAAMX,IAAIY,KACzBV,MAAMS,IAAMX,IAAIY,GAChBV,MAAMQ,OAASR,MAAMQ,OAAOG,MAAM,EAAGb,IAAIY,GAAKV,MAAMY,QAJpDZ,MAAQ,CAACY,MAAOd,IAAIY,GAAID,IAAKX,IAAIY,GAAIF,OAAQ,GAAIH,MAAOL,MAAMK,MACrDH,KAAsB,KAAhBF,MAAMQ,OAAgB,WAAa,cAMhDK,MAAQb,MAES,YAAda,MAAMX,MAAoB,IAEX,MADpBW,MAAQjB,SAASF,OAAQR,IAAIY,IAAIgB,KAAMD,MAAMD,SACnCJ,OAAe,UACzBK,MAAQjB,SAASF,OAAQR,IAAIY,IAAIgB,KAAMD,MAAMD,SACxCG,QAAS,IAAIA,QAAU,GAC5BA,QAAQC,KAAKH,aAER,CAACI,KAAMC,eAAelB,MAAOe,QAASpB,SAAUE,SAC/CsB,KAAMjC,IAAIY,IAAIgB,KAAMd,MAAMY,OAC1BQ,GAAIlC,IAAIY,IAAIgB,KAAMd,MAAMS,iBAUzBY,qBAAqB3B,OAAQI,SAIhCE,MAAQN,OAAO4B,WAAWxB,YAC1BA,IAAIY,IAAMV,MAAMY,MAAQ,GAA+B,KAA1BZ,MAAMQ,OAAOe,OAAO,IACnDvB,MAAMS,IAAMT,MAAMY,MAClBZ,MAAMQ,OAAS,IACfR,MAAME,KAAO,YAEN,cAAcD,KAAKD,MAAMQ,UAChCR,MAAME,KAAO,WACbF,MAAMY,QACNZ,MAAMQ,OAASR,MAAMQ,OAAOgB,QAAQ,KAAM,KAErCxB,MAjBTf,WAAWwC,eAAe,OAAQ,uBALV/B,OAAQG,gBACvBJ,WAAWC,OAAQgC,oBACR,SAAUnC,EAAGO,YAAaP,EAAE+B,WAAWxB,OACvCD,YAyBpBZ,WAAWwC,eAAe,OAAQ,yBAHR/B,OAAQG,gBACzBJ,WAAWC,OAAQiC,qBAAsBN,qBAAsBxB,gBAIpE+B,YAAc,iJAC8DC,MAAM,KAClFC,WAAa,4IACkED,MAAM,KACrFE,UAAY,4BAA4BF,MAAM,KAC9CH,mBAAqB,4NACoGG,MAAM,KAC/HF,qBAAuB,gMAC8GE,MAAM,cAWtIX,eAAelB,MAAOe,QAASpB,SAAUE,aAC5CmC,MAAQ,GAAIpB,MAAQZ,MAAMQ,OAAQyB,OAASpC,SAAWA,QAAQqC,aAAeC,gBACxEC,SAASC,KACiB,GAA7BA,IAAIC,YAAY1B,MAAO,aAhGRxB,IAAKmD,UACrBC,MAAMC,UAAUC,QAAS,SACxBpD,EAAIF,IAAII,OACLF,QACDF,IAAIE,KAAOiD,YACN,SAGJ,SAEoB,GAAtBnD,IAAIsD,QAAQH,MAsFsBI,CAAcX,MAAOK,MAAML,MAAMhB,KAAKqB,cAEtEO,kBAAkBC,KACP,iBAAPA,IAAiB1D,QAAQyC,YAAaQ,UACxCS,eAAeL,MAAOrD,QAAQ2C,WAAYM,UAC1CS,eAAeC,UAAU3D,QAAQ4C,UAAWK,mBAjBpCS,IAAKE,aACnBC,OAAOC,qBAAwBD,OAAOE,mBAGpC,IAAIC,EAAIN,IAAKM,EAAGA,EAAIH,OAAOE,eAAeC,GAC7CH,OAAOC,oBAAoBE,GAAGhE,QAAQ4D,mBAHnC,IAAIK,QAAQP,IAAKE,SAASK,MAgB/BC,CAAYR,IAAKT,aAGfrB,SAAWA,QAAQvB,OAAQ,KAGJ8D,KAArBT,IAAM9B,QAAQwC,UACdV,IAAI3C,MAAyC,IAAjC2C,IAAI3C,KAAKwC,QAAQ,aAC3B7C,SAAWA,QAAQ2D,oBACrBF,KAAOzD,QAAQ2D,kBAAkBX,IAAIrC,SAClCX,UAAsC,IAA3BA,QAAQ4D,iBACtBH,KAAOA,MAAQrB,OAAOY,IAAIrC,UACP,UAAZqC,IAAI3C,KACboD,KAAO,GACc,QAAZT,IAAI3C,KACboD,KAAO,EACc,YAAZT,IAAI3C,OACQ,MAAjB+B,OAAOyB,QAAiC,KAAdb,IAAIrC,QAA+B,UAAdqC,IAAIrC,QAC1B,mBAAjByB,OAAOyB,OAEE,MAAZzB,OAAO0B,GAA4B,KAAdd,IAAIrC,QAAsC,mBAAZyB,OAAO0B,IACjEL,KAAOrB,OAAO0B,KAFdL,KAAOrB,OAAOyB,UAIH,MAARJ,MAAgBvC,QAAQvB,QAC7B8D,KAAOA,KAAKvC,QAAQwC,MAAM/C,QAChB,MAAR8C,MAAcV,kBAAkBU,UAC/B,KAGA,IAAIM,EAAI5D,MAAMK,MAAMwD,UAAWD,EAAGA,EAAIA,EAAEE,KAAM1B,SAASwB,EAAER,UACzD,IAAIW,EAAI/D,MAAMK,MAAMU,QAASgD,EAAGA,EAAIA,EAAEC,KACzC,IAASJ,EAAIG,EAAEE,KAAML,EAAGA,EAAIA,EAAEE,KAAM1B,SAASwB,EAAER,UACxCQ,EAAI5D,MAAMK,MAAM6D,WAAYN,EAAGA,EAAIA,EAAEE,KAAM1B,SAASwB,EAAER,SAC3DvD,SAAwC,MAA7BA,QAAQ2D,kBACrB,IAAK,IAAIW,OAAOtE,QAAQ2D,kBACtBpB,SAAS+B,KACRtE,UAAsC,IAA3BA,QAAQ4D,gBACtBb,kBAAkBX,QACpB9C,QAAQQ,SAAUyC,iBAEbJ,QA3Ja,iBAAXoC,SAAwC,iBAAVC,OACvCrF,IAAIsF,QAAQ,yBACY,mBAAVC,QAAwBA,OAAOC,IAC7CD,yDAAO,CAAC,wBAAyBvF,KAEjCA,IAAIC"}
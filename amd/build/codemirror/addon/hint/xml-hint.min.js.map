{"version":3,"file":"xml-hint.min.js","sources":["../../../../src/codemirror/addon/hint/xml-hint.js"],"sourcesContent":["/*eslint-disable*/\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n    if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n      mod(require(\"../../lib/codemirror\"));\n    else if (typeof define == \"function\" && define.amd) // AMD\n      define([\"../../lib/codemirror\"], mod);\n    else // Plain browser env\n      mod(CodeMirror);\n  })(function(CodeMirror) {\n    \"use strict\";\n\n    var Pos = CodeMirror.Pos;\n\n    function matches(hint, typed, matchInMiddle) {\n      if (matchInMiddle) return hint.indexOf(typed) >= 0;\n      else return hint.lastIndexOf(typed, 0) == 0;\n    }\n\n    function getHints(cm, options) {\n      var tags = options && options.schemaInfo;\n      var quote = (options && options.quoteChar) || '\"';\n      var matchInMiddle = options && options.matchInMiddle;\n      if (!tags) return;\n      var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n      if (token.end > cur.ch) {\n        token.end = cur.ch;\n        token.string = token.string.slice(0, cur.ch - token.start);\n      }\n      var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n      if (!inner.mode.xmlCurrentTag) return\n      var result = [], replaceToken = false, prefix;\n      var tag = /\\btag\\b/.test(token.type) && !/>$/.test(token.string);\n      var tagName = tag && /^\\w/.test(token.string), tagStart;\n\n      if (tagName) {\n        var before = cm.getLine(cur.line).slice(Math.max(0, token.start - 2), token.start);\n        var tagType = /<\\/$/.test(before) ? \"close\" : /<$/.test(before) ? \"open\" : null;\n        if (tagType) tagStart = token.start - (tagType == \"close\" ? 2 : 1);\n      } else if (tag && token.string == \"<\") {\n        tagType = \"open\";\n      } else if (tag && token.string == \"</\") {\n        tagType = \"close\";\n      }\n\n      var tagInfo = inner.mode.xmlCurrentTag(inner.state)\n      if (!tag && !tagInfo || tagType) {\n        if (tagName)\n          prefix = token.string;\n        replaceToken = tagType;\n        var context = inner.mode.xmlCurrentContext ? inner.mode.xmlCurrentContext(inner.state) : []\n        var inner = context.length && context[context.length - 1]\n        var curTag = inner && tags[inner]\n        var childList = inner ? curTag && curTag.children : tags[\"!top\"];\n        if (childList && tagType != \"close\") {\n          for (var i = 0; i < childList.length; ++i) if (!prefix || matches(childList[i], prefix, matchInMiddle))\n            result.push(\"<\" + childList[i]);\n        } else if (tagType != \"close\") {\n          for (var name in tags)\n            if (tags.hasOwnProperty(name) && name != \"!top\" && name != \"!attrs\" && (!prefix || matches(name, prefix, matchInMiddle)))\n              result.push(\"<\" + name);\n        }\n        if (inner && (!prefix || tagType == \"close\" && matches(inner, prefix, matchInMiddle)))\n          result.push(\"</\" + inner + \">\");\n      } else {\n        // Attribute completion\n        var curTag = tagInfo && tags[tagInfo.name], attrs = curTag && curTag.attrs;\n        var globalAttrs = tags[\"!attrs\"];\n        if (!attrs && !globalAttrs) return;\n        if (!attrs) {\n          attrs = globalAttrs;\n        } else if (globalAttrs) { // Combine tag-local and global attributes\n          var set = {};\n          for (var nm in globalAttrs) if (globalAttrs.hasOwnProperty(nm)) set[nm] = globalAttrs[nm];\n          for (var nm in attrs) if (attrs.hasOwnProperty(nm)) set[nm] = attrs[nm];\n          attrs = set;\n        }\n        if (token.type == \"string\" || token.string == \"=\") { // A value\n          var before = cm.getRange(Pos(cur.line, Math.max(0, cur.ch - 60)),\n                                   Pos(cur.line, token.type == \"string\" ? token.start : token.end));\n          var atName = before.match(/([^\\s\\u00a0=<>\\\"\\']+)=$/), atValues;\n          if (!atName || !attrs.hasOwnProperty(atName[1]) || !(atValues = attrs[atName[1]])) return;\n          if (typeof atValues == 'function') atValues = atValues.call(this, cm); // Functions can be used to supply values for autocomplete widget\n          if (token.type == \"string\") {\n            prefix = token.string;\n            var n = 0;\n            if (/['\"]/.test(token.string.charAt(0))) {\n              quote = token.string.charAt(0);\n              prefix = token.string.slice(1);\n              n++;\n            }\n            var len = token.string.length;\n            if (/['\"]/.test(token.string.charAt(len - 1))) {\n              quote = token.string.charAt(len - 1);\n              prefix = token.string.substr(n, len - 2);\n            }\n            if (n) { // an opening quote\n              var line = cm.getLine(cur.line);\n              if (line.length > token.end && line.charAt(token.end) == quote) token.end++; // include a closing quote\n            }\n            replaceToken = true;\n          }\n          var returnHintsFromAtValues = function(atValues) {\n            if (atValues)\n              for (var i = 0; i < atValues.length; ++i) if (!prefix || matches(atValues[i], prefix, matchInMiddle))\n                result.push(quote + atValues[i] + quote);\n            return returnHints();\n          };\n          if (atValues && atValues.then) return atValues.then(returnHintsFromAtValues);\n          return returnHintsFromAtValues(atValues);\n        } else { // An attribute name\n          if (token.type == \"attribute\") {\n            prefix = token.string;\n            replaceToken = true;\n          }\n          for (var attr in attrs) if (attrs.hasOwnProperty(attr) && (!prefix || matches(attr, prefix, matchInMiddle)))\n            result.push(attr);\n        }\n      }\n      function returnHints() {\n        return {\n          list: result,\n          from: replaceToken ? Pos(cur.line, tagStart == null ? token.start : tagStart) : cur,\n          to: replaceToken ? Pos(cur.line, token.end) : cur\n        };\n      }\n      return returnHints();\n    }\n\n    CodeMirror.registerHelper(\"hint\", \"xml\", getHints);\n  });"],"names":["mod","CodeMirror","Pos","matches","hint","typed","matchInMiddle","indexOf","lastIndexOf","registerHelper","cm","options","tags","schemaInfo","quote","quoteChar","cur","getCursor","token","getTokenAt","end","ch","string","slice","start","inner","innerMode","getMode","state","mode","xmlCurrentTag","prefix","tagStart","result","replaceToken","tag","test","type","tagName","before","getLine","line","Math","max","tagType","tagInfo","context","xmlCurrentContext","curTag","length","childList","children","i","push","name","hasOwnProperty","attrs","globalAttrs","set","nm","atValues","atName","getRange","match","call","this","n","charAt","len","substr","returnHintsFromAtValues","returnHints","then","attr","list","from","to","exports","module","require","define","amd"],"mappings":"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"}
{"version":3,"file":"markdown.min.js","sources":["../../../../src/codemirror/mode/markdown/markdown.js"],"sourcesContent":["/*eslint-disable*/\n\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n    if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n      mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n    else if (typeof define == \"function\" && define.amd) // AMD\n      define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta/meta\"], mod);\n    else // Plain browser env\n      mod(CodeMirror);\n  })(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n    var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n    var htmlModeMissing = htmlMode.name == \"null\"\n\n    function getMode(name) {\n      if (CodeMirror.findModeByName) {\n        var found = CodeMirror.findModeByName(name);\n        if (found) name = found.mime || found.mimes[0];\n      }\n      var mode = CodeMirror.getMode(cmCfg, name);\n      return mode.name == \"null\" ? null : mode;\n    }\n\n    // Should characters that affect highlighting be highlighted separate?\n    // Does not include characters that will be output (such as `1.` and `-` for lists)\n    if (modeCfg.highlightFormatting === undefined)\n      modeCfg.highlightFormatting = false;\n\n    // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n    // Excess `>` will emit `error` token.\n    if (modeCfg.maxBlockquoteDepth === undefined)\n      modeCfg.maxBlockquoteDepth = 0;\n\n    // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n    if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n    // Turn on strikethrough syntax\n    if (modeCfg.strikethrough === undefined)\n      modeCfg.strikethrough = false;\n\n    if (modeCfg.emoji === undefined)\n      modeCfg.emoji = false;\n\n    if (modeCfg.fencedCodeBlockHighlighting === undefined)\n      modeCfg.fencedCodeBlockHighlighting = true;\n\n    if (modeCfg.fencedCodeBlockDefaultMode === undefined)\n      modeCfg.fencedCodeBlockDefaultMode = 'text/plain';\n\n    if (modeCfg.xml === undefined)\n      modeCfg.xml = true;\n\n    // Allow token types to be overridden by user-provided token types.\n    if (modeCfg.tokenTypeOverrides === undefined)\n      modeCfg.tokenTypeOverrides = {};\n\n    var tokenTypes = {\n      header: \"header\",\n      code: \"comment\",\n      quote: \"quote\",\n      list1: \"variable-2\",\n      list2: \"variable-3\",\n      list3: \"keyword\",\n      hr: \"hr\",\n      image: \"image\",\n      imageAltText: \"image-alt-text\",\n      imageMarker: \"image-marker\",\n      formatting: \"formatting\",\n      linkInline: \"link\",\n      linkEmail: \"link\",\n      linkText: \"link\",\n      linkHref: \"string\",\n      em: \"em\",\n      strong: \"strong\",\n      strikethrough: \"strikethrough\",\n      emoji: \"builtin\"\n    };\n\n    for (var tokenType in tokenTypes) {\n      if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n        tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n      }\n    }\n\n    var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n    ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n    ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n    ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n    ,   setextHeaderRE = /^ {0,3}(?:\\={1,}|-{2,})\\s*$/\n    ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n    ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w\\/+#-]*)[^\\n`]*$/\n    ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n    ,   punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n    ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n    function switchInline(stream, state, f) {\n      state.f = state.inline = f;\n      return f(stream, state);\n    }\n\n    function switchBlock(stream, state, f) {\n      state.f = state.block = f;\n      return f(stream, state);\n    }\n\n    function lineIsEmpty(line) {\n      return !line || !/\\S/.test(line.string)\n    }\n\n    // Blocks\n\n    function blankLine(state) {\n      // Reset linkTitle state\n      state.linkTitle = false;\n      state.linkHref = false;\n      state.linkText = false;\n      // Reset EM state\n      state.em = false;\n      // Reset STRONG state\n      state.strong = false;\n      // Reset strikethrough state\n      state.strikethrough = false;\n      // Reset state.quote\n      state.quote = 0;\n      // Reset state.indentedCode\n      state.indentedCode = false;\n      if (state.f == htmlBlock) {\n        var exit = htmlModeMissing\n        if (!exit) {\n          var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n          exit = inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n            (!inner.state.context && inner.state.tokenize.isInText)\n        }\n        if (exit) {\n          state.f = inlineNormal;\n          state.block = blockNormal;\n          state.htmlState = null;\n        }\n      }\n      // Reset state.trailingSpace\n      state.trailingSpace = 0;\n      state.trailingSpaceNewLine = false;\n      // Mark this line as blank\n      state.prevLine = state.thisLine\n      state.thisLine = {stream: null}\n      return null;\n    }\n\n    function blockNormal(stream, state) {\n      var firstTokenOnLine = stream.column() === state.indentation;\n      var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n      var prevLineIsIndentedCode = state.indentedCode;\n      var prevLineIsHr = state.prevLine.hr;\n      var prevLineIsList = state.list !== false;\n      var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n      state.indentedCode = false;\n\n      var lineIndentation = state.indentation;\n      // compute once per line (on first token)\n      if (state.indentationDiff === null) {\n        state.indentationDiff = state.indentation;\n        if (prevLineIsList) {\n          state.list = null;\n          // While this list item's marker's indentation is less than the deepest\n          //  list item's content's indentation,pop the deepest list item\n          //  indentation off the stack, and update block indentation state\n          while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n            state.listStack.pop();\n            if (state.listStack.length) {\n              state.indentation = state.listStack[state.listStack.length - 1];\n            // less than the first list's indent -> the line is no longer a list\n            } else {\n              state.list = false;\n            }\n          }\n          if (state.list !== false) {\n            state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n          }\n        }\n      }\n\n      // not comprehensive (currently only for setext detection purposes)\n      var allowsInlineContinuation = (\n          !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n          (!prevLineIsList || !prevLineIsIndentedCode) &&\n          !state.prevLine.fencedCodeEnd\n      );\n\n      var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n        state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n      var match = null;\n      if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n           state.prevLine.header || prevLineLineIsEmpty)) {\n        stream.skipToEnd();\n        state.indentedCode = true;\n        return tokenTypes.code;\n      } else if (stream.eatSpace()) {\n        return null;\n      } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n        state.quote = 0;\n        state.header = match[1].length;\n        state.thisLine.header = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n        state.f = state.inline;\n        return getType(state);\n      } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n        state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n        if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n        stream.eatSpace();\n        return getType(state);\n      } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n        var listType = match[1] ? \"ol\" : \"ul\";\n\n        state.indentation = lineIndentation + stream.current().length;\n        state.list = true;\n        state.quote = 0;\n\n        // Add this list item's content's indentation to the stack\n        state.listStack.push(state.indentation);\n        // Reset inline styles which shouldn't propagate across list items\n        state.em = false;\n        state.strong = false;\n        state.code = false;\n        state.strikethrough = false;\n\n        if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n          state.taskList = true;\n        }\n        state.f = state.inline;\n        if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n        return getType(state);\n      } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n        state.quote = 0;\n        state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n        // try switching mode\n        state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2] || modeCfg.fencedCodeBlockDefaultMode );\n        if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n        state.f = state.block = local;\n        if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n        state.code = -1\n        return getType(state);\n      // SETEXT has lowest block-scope precedence after HR, so check it after\n      //  the others (code, blockquote, list...)\n      } else if (\n        // if setext set, indicates line after ---/===\n        state.setext || (\n          // line before ---/===\n          (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n          !state.code && !isHr && !linkDefRE.test(stream.string) &&\n          (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n        )\n      ) {\n        if ( !state.setext ) {\n          state.header = match[0].charAt(0) == '=' ? 1 : 2;\n          state.setext = state.header;\n        } else {\n          state.header = state.setext;\n          // has no effect on type so we can reset it now\n          state.setext = 0;\n          stream.skipToEnd();\n          if (modeCfg.highlightFormatting) state.formatting = \"header\";\n        }\n        state.thisLine.header = true;\n        state.f = state.inline;\n        return getType(state);\n      } else if (isHr) {\n        stream.skipToEnd();\n        state.hr = true;\n        state.thisLine.hr = true;\n        return tokenTypes.hr;\n      } else if (stream.peek() === '[') {\n        return switchInline(stream, state, footnoteLink);\n      }\n\n      return switchInline(stream, state, state.inline);\n    }\n\n    function htmlBlock(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState);\n      if (!htmlModeMissing) {\n        var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n        if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n             (!inner.state.context && inner.state.tokenize.isInText)) ||\n            (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n          state.f = inlineNormal;\n          state.block = blockNormal;\n          state.htmlState = null;\n        }\n      }\n      return style;\n    }\n\n    function local(stream, state) {\n      var currListInd = state.listStack[state.listStack.length - 1] || 0;\n      var hasExitedList = state.indentation < currListInd;\n      var maxFencedEndInd = currListInd + 3;\n      if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n        if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n        var returnType;\n        if (!hasExitedList) returnType = getType(state)\n        state.localMode = state.localState = null;\n        state.block = blockNormal;\n        state.f = inlineNormal;\n        state.fencedEndRE = null;\n        state.code = 0\n        state.thisLine.fencedCodeEnd = true;\n        if (hasExitedList) return switchBlock(stream, state, state.block);\n        return returnType;\n      } else if (state.localMode) {\n        return state.localMode.token(stream, state.localState);\n      } else {\n        stream.skipToEnd();\n        return tokenTypes.code;\n      }\n    }\n\n    // Inline\n    function getType(state) {\n      var styles = [];\n\n      if (state.formatting) {\n        styles.push(tokenTypes.formatting);\n\n        if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n        for (var i = 0; i < state.formatting.length; i++) {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n          if (state.formatting[i] === \"header\") {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n          }\n\n          // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n          // Add `error` instead if the maximum blockquote nesting depth is passed\n          if (state.formatting[i] === \"quote\") {\n            if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n              styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n            } else {\n              styles.push(\"error\");\n            }\n          }\n        }\n      }\n\n      if (state.taskOpen) {\n        styles.push(\"meta\");\n        return styles.length ? styles.join(' ') : null;\n      }\n      if (state.taskClosed) {\n        styles.push(\"property\");\n        return styles.length ? styles.join(' ') : null;\n      }\n\n      if (state.linkHref) {\n        styles.push(tokenTypes.linkHref, \"url\");\n      } else { // Only apply inline styles to non-url text\n        if (state.strong) { styles.push(tokenTypes.strong); }\n        if (state.em) { styles.push(tokenTypes.em); }\n        if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n        if (state.emoji) { styles.push(tokenTypes.emoji); }\n        if (state.linkText) { styles.push(tokenTypes.linkText); }\n        if (state.code) { styles.push(tokenTypes.code); }\n        if (state.image) { styles.push(tokenTypes.image); }\n        if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n        if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n      }\n\n      if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n      if (state.quote) {\n        styles.push(tokenTypes.quote);\n\n        // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n        if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n          styles.push(tokenTypes.quote + \"-\" + state.quote);\n        } else {\n          styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n        }\n      }\n\n      if (state.list !== false) {\n        var listMod = (state.listStack.length - 1) % 3;\n        if (!listMod) {\n          styles.push(tokenTypes.list1);\n        } else if (listMod === 1) {\n          styles.push(tokenTypes.list2);\n        } else {\n          styles.push(tokenTypes.list3);\n        }\n      }\n\n      if (state.trailingSpaceNewLine) {\n        styles.push(\"trailing-space-new-line\");\n      } else if (state.trailingSpace) {\n        styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n      }\n\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    function handleText(stream, state) {\n      if (stream.match(textRE, true)) {\n        return getType(state);\n      }\n      return undefined;\n    }\n\n    function inlineNormal(stream, state) {\n      var style = state.text(stream, state);\n      if (typeof style !== 'undefined')\n        return style;\n\n      if (state.list) { // List marker (*, +, -, 1., etc)\n        state.list = null;\n        return getType(state);\n      }\n\n      if (state.taskList) {\n        var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n        if (taskOpen) state.taskOpen = true;\n        else state.taskClosed = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"task\";\n        state.taskList = false;\n        return getType(state);\n      }\n\n      state.taskOpen = false;\n      state.taskClosed = false;\n\n      if (state.header && stream.match(/^#+$/, true)) {\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n        return getType(state);\n      }\n\n      var ch = stream.next();\n\n      // Matches link titles present on next line\n      if (state.linkTitle) {\n        state.linkTitle = false;\n        var matchCh = ch;\n        if (ch === '(') {\n          matchCh = ')';\n        }\n        matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n        var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n        if (stream.match(new RegExp(regex), true)) {\n          return tokenTypes.linkHref;\n        }\n      }\n\n      // If this block is changed, it may need to be updated in GFM mode\n      if (ch === '`') {\n        var previousFormatting = state.formatting;\n        if (modeCfg.highlightFormatting) state.formatting = \"code\";\n        stream.eatWhile('`');\n        var count = stream.current().length\n        if (state.code == 0 && (!state.quote || count == 1)) {\n          state.code = count\n          return getType(state)\n        } else if (count == state.code) { // Must be exact\n          var t = getType(state)\n          state.code = 0\n          return t\n        } else {\n          state.formatting = previousFormatting\n          return getType(state)\n        }\n      } else if (state.code) {\n        return getType(state);\n      }\n\n      if (ch === '\\\\') {\n        stream.next();\n        if (modeCfg.highlightFormatting) {\n          var type = getType(state);\n          var formattingEscape = tokenTypes.formatting + \"-escape\";\n          return type ? type + \" \" + formattingEscape : formattingEscape;\n        }\n      }\n\n      if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n        state.imageMarker = true;\n        state.image = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"image\";\n        return getType(state);\n      }\n\n      if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n        state.imageMarker = false;\n        state.imageAltText = true\n        if (modeCfg.highlightFormatting) state.formatting = \"image\";\n        return getType(state);\n      }\n\n      if (ch === ']' && state.imageAltText) {\n        if (modeCfg.highlightFormatting) state.formatting = \"image\";\n        var type = getType(state);\n        state.imageAltText = false;\n        state.image = false;\n        state.inline = state.f = linkHref;\n        return type;\n      }\n\n      if (ch === '[' && !state.image) {\n        if (state.linkText && stream.match(/^.*?\\]/)) return getType(state)\n        state.linkText = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        return getType(state);\n      }\n\n      if (ch === ']' && state.linkText) {\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n        state.linkText = false;\n        state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n        return type;\n      }\n\n      if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n        state.f = state.inline = linkInline;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n        if (type){\n          type += \" \";\n        } else {\n          type = \"\";\n        }\n        return type + tokenTypes.linkInline;\n      }\n\n      if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n        state.f = state.inline = linkInline;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n        if (type){\n          type += \" \";\n        } else {\n          type = \"\";\n        }\n        return type + tokenTypes.linkEmail;\n      }\n\n      if (modeCfg.xml && ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n        var end = stream.string.indexOf(\">\", stream.pos);\n        if (end != -1) {\n          var atts = stream.string.substring(stream.start, end);\n          if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n        }\n        stream.backUp(1);\n        state.htmlState = CodeMirror.startState(htmlMode);\n        return switchBlock(stream, state, htmlBlock);\n      }\n\n      if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n        state.md_inside = false;\n        return \"tag\";\n      } else if (ch === \"*\" || ch === \"_\") {\n        var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n        while (len < 3 && stream.eat(ch)) len++\n        var after = stream.peek() || \" \"\n        // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n        var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n        var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n        var setEm = null, setStrong = null\n        if (len % 2) { // Em\n          if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n            setEm = true\n          else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n            setEm = false\n        }\n        if (len > 1) { // Strong\n          if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n            setStrong = true\n          else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n            setStrong = false\n        }\n        if (setStrong != null || setEm != null) {\n          if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n          if (setEm === true) state.em = ch\n          if (setStrong === true) state.strong = ch\n          var t = getType(state)\n          if (setEm === false) state.em = false\n          if (setStrong === false) state.strong = false\n          return t\n        }\n      } else if (ch === ' ') {\n        if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(1);\n          }\n        }\n      }\n\n      if (modeCfg.strikethrough) {\n        if (ch === '~' && stream.eatWhile(ch)) {\n          if (state.strikethrough) {// Remove strikethrough\n            if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n            var t = getType(state);\n            state.strikethrough = false;\n            return t;\n          } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n            state.strikethrough = true;\n            if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n            return getType(state);\n          }\n        } else if (ch === ' ') {\n          if (stream.match('~~', true)) { // Probably surrounded by space\n            if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n              return getType(state);\n            } else { // Not surrounded by spaces, back up pointer\n              stream.backUp(2);\n            }\n          }\n        }\n      }\n\n      if (modeCfg.emoji && ch === \":\" && stream.match(/^(?:[a-z_\\d+][a-z_\\d+-]*|\\-[a-z_\\d+][a-z_\\d+-]*):/)) {\n        state.emoji = true;\n        if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n        var retType = getType(state);\n        state.emoji = false;\n        return retType;\n      }\n\n      if (ch === ' ') {\n        if (stream.match(/^ +$/, false)) {\n          state.trailingSpace++;\n        } else if (state.trailingSpace) {\n          state.trailingSpaceNewLine = true;\n        }\n      }\n\n      return getType(state);\n    }\n\n    function linkInline(stream, state) {\n      var ch = stream.next();\n\n      if (ch === \">\") {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var type = getType(state);\n        if (type){\n          type += \" \";\n        } else {\n          type = \"\";\n        }\n        return type + tokenTypes.linkInline;\n      }\n\n      stream.match(/^[^>]+/, true);\n\n      return tokenTypes.linkInline;\n    }\n\n    function linkHref(stream, state) {\n      // Check if space, and return NULL if so (to avoid marking the space)\n      if(stream.eatSpace()){\n        return null;\n      }\n      var ch = stream.next();\n      if (ch === '(' || ch === '[') {\n        state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        state.linkHref = true;\n        return getType(state);\n      }\n      return 'error';\n    }\n\n    var linkRE = {\n      \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n      \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n    }\n\n    function getLinkHrefInside(endChar) {\n      return function(stream, state) {\n        var ch = stream.next();\n\n        if (ch === endChar) {\n          state.f = state.inline = inlineNormal;\n          if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n          var returnState = getType(state);\n          state.linkHref = false;\n          return returnState;\n        }\n\n        stream.match(linkRE[endChar])\n        state.linkHref = true;\n        return getType(state);\n      };\n    }\n\n    function footnoteLink(stream, state) {\n      if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n        state.f = footnoteLinkInside;\n        stream.next(); // Consume [\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        state.linkText = true;\n        return getType(state);\n      }\n      return switchInline(stream, state, inlineNormal);\n    }\n\n    function footnoteLinkInside(stream, state) {\n      if (stream.match(']:', true)) {\n        state.f = state.inline = footnoteUrl;\n        if (modeCfg.highlightFormatting) state.formatting = \"link\";\n        var returnType = getType(state);\n        state.linkText = false;\n        return returnType;\n      }\n\n      stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n      return tokenTypes.linkText;\n    }\n\n    function footnoteUrl(stream, state) {\n      // Check if space, and return NULL if so (to avoid marking the space)\n      if(stream.eatSpace()){\n        return null;\n      }\n      // Match URL\n      stream.match(/^[^\\s]+/, true);\n      // Check for link title\n      if (stream.peek() === undefined) { // End of line, set flag to check next line\n        state.linkTitle = true;\n      } else { // More content on line, check if link title\n        stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\.)+\"|'(?:[^'\\\\]|\\\\.)+'|\\((?:[^)\\\\]|\\\\.)+\\)))?/, true);\n      }\n      state.f = state.inline = inlineNormal;\n      return tokenTypes.linkHref + \" url\";\n    }\n\n    var mode = {\n      startState: function() {\n        return {\n          f: blockNormal,\n\n          prevLine: {stream: null},\n          thisLine: {stream: null},\n\n          block: blockNormal,\n          htmlState: null,\n          indentation: 0,\n\n          inline: inlineNormal,\n          text: handleText,\n\n          formatting: false,\n          linkText: false,\n          linkHref: false,\n          linkTitle: false,\n          code: 0,\n          em: false,\n          strong: false,\n          header: 0,\n          setext: 0,\n          hr: false,\n          taskList: false,\n          list: false,\n          listStack: [],\n          quote: 0,\n          trailingSpace: 0,\n          trailingSpaceNewLine: false,\n          strikethrough: false,\n          emoji: false,\n          fencedEndRE: null\n        };\n      },\n\n      copyState: function(s) {\n        return {\n          f: s.f,\n\n          prevLine: s.prevLine,\n          thisLine: s.thisLine,\n\n          block: s.block,\n          htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n          indentation: s.indentation,\n\n          localMode: s.localMode,\n          localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n          inline: s.inline,\n          text: s.text,\n          formatting: false,\n          linkText: s.linkText,\n          linkTitle: s.linkTitle,\n          linkHref: s.linkHref,\n          code: s.code,\n          em: s.em,\n          strong: s.strong,\n          strikethrough: s.strikethrough,\n          emoji: s.emoji,\n          header: s.header,\n          setext: s.setext,\n          hr: s.hr,\n          taskList: s.taskList,\n          list: s.list,\n          listStack: s.listStack.slice(0),\n          quote: s.quote,\n          indentedCode: s.indentedCode,\n          trailingSpace: s.trailingSpace,\n          trailingSpaceNewLine: s.trailingSpaceNewLine,\n          md_inside: s.md_inside,\n          fencedEndRE: s.fencedEndRE\n        };\n      },\n\n      token: function(stream, state) {\n\n        // Reset state.formatting\n        state.formatting = false;\n\n        if (stream != state.thisLine.stream) {\n          state.header = 0;\n          state.hr = false;\n\n          if (stream.match(/^\\s*$/, true)) {\n            blankLine(state);\n            return null;\n          }\n\n          state.prevLine = state.thisLine\n          state.thisLine = {stream: stream}\n\n          // Reset state.taskList\n          state.taskList = false;\n\n          // Reset state.trailingSpace\n          state.trailingSpace = 0;\n          state.trailingSpaceNewLine = false;\n\n          if (!state.localState) {\n            state.f = state.block;\n            if (state.f != htmlBlock) {\n              var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n              state.indentation = indentation;\n              state.indentationDiff = null;\n              if (indentation > 0) return null;\n            }\n          }\n        }\n        return state.f(stream, state);\n      },\n\n      innerMode: function(state) {\n        if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n        if (state.localState) return {state: state.localState, mode: state.localMode};\n        return {state: state, mode: mode};\n      },\n\n      indent: function(state, textAfter, line) {\n        if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n        if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n        return CodeMirror.Pass\n      },\n\n      blankLine: blankLine,\n\n      getType: getType,\n\n      blockCommentStart: \"<!--\",\n      blockCommentEnd: \"-->\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\",\n      fold: \"markdown\"\n    };\n    return mode;\n  }, \"xml\");\n\n  CodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n  });"],"names":["mod","CodeMirror","defineMode","cmCfg","modeCfg","htmlMode","getMode","htmlModeMissing","name","undefined","highlightFormatting","maxBlockquoteDepth","taskLists","strikethrough","emoji","fencedCodeBlockHighlighting","fencedCodeBlockDefaultMode","xml","tokenTypeOverrides","tokenTypes","header","code","quote","list1","list2","list3","hr","image","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","em","strong","tokenType","hasOwnProperty","hrRE","listRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","switchInline","stream","state","f","inline","switchBlock","block","blankLine","linkTitle","indentedCode","htmlBlock","exit","inner","innerMode","htmlState","mode","tagStart","context","tokenize","isInText","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","line","firstTokenOnLine","column","indentation","prevLineLineIsEmpty","test","string","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","list","maxNonCodeIndentation","listStack","length","lineIndentation","indentationDiff","pop","allowsInlineContinuation","fencedCodeEnd","isHr","match","skipToEnd","eatSpace","getType","eat","setext","listType","current","push","taskList","fencedEndRE","RegExp","localMode","findModeByName","found","mime","mimes","localState","startState","local","lookAhead","charAt","peek","footnoteLink","style","token","md_inside","indexOf","returnType","currListInd","hasExitedList","maxFencedEndInd","styles","i","taskOpen","join","taskClosed","listMod","handleText","text","ch","next","matchCh","regex","replace","previousFormatting","eatWhile","count","t","type","formattingEscape","end","pos","atts","substring","start","backUp","len","before","after","leftFlanking","rightFlanking","setEm","setStrong","retType","endChar","returnState","linkRE","footnoteLinkInside","footnoteUrl","copyState","s","slice","indent","textAfter","Pass","blockCommentStart","blockCommentEnd","closeBrackets","fold","defineMIME","exports","module","require","define","amd"],"mappings":"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"}